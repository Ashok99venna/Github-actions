---
name: "Backend Micro Service CD"
description: "Composite GitHub Action for Backend Micro Service CD"

inputs:
  ECR_REPOSITORY_NAME:
  description: "ECR Repo Name"
  required: false

runs:
  using: "composite"
  steps:
      - name: Configure AWS credentials
        id: cred
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ env.AWS_ACCESS_SECRET }}
          aws-region: ${{ env.REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
        shell: bash

      - name: Download task definition
        
        id: task
        run: |
          aws ecs describe-task-definition --task-definition ${{env.ECS_TASK_DEFINITION}}-${{ matrix.environment }} --query taskDefinition > task-definition.json
        shell: bash  

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{env.ECS_CONTAINER_NAME}}-${{ matrix.environment }} # edit me
          image: ${{ steps.build-image.outputs.image }}
          inputsironment-variables: |
            LOG_LEVEL=info
            inputsIRONMENT=prod
            LOGGER=console
            PORT=8080
            AWS_REGION=${{ env.REGION }}
            IMAGE_TAG=${{ github.sha }}
            RANGE_SERVICE=${{ env.RANGE_SERVICE }}
            USEXRAY=true
            
      - name: Deploy Amazon ECS task definition
        id: deploy-def
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}-${{ matrix.environment }}
          cluster: ${{ env.ECS_CLUSTER }}-${{ matrix.environment }}
          wait-for-service-stability: true
 
  
