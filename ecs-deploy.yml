name: "Deploy to EC"

"on":
  workflow_dispatch:

  push:
    branches:
      - notification
    tags:
      - "*"
env:
  REGION: "ap-southeast-1"
  ECR_REPOSITORY_NAME: "order-service-repository"
  ECS_SERVICE: "order-service"
  ECS_CLUSTER: "isellpro"
  ECS_TASK_DEFINITION: "order-service-task"
  ECS_CONTAINER_NAME: "order-service-container"
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_ACCESS_SECRET: ${{ secrets.AWS_ACCESS_SECRET }}
  
  
jobs:
  ci:
    name: "Integration"
    runs-on: "ubuntu-latest"
    steps:
      - name: checkout notification action
        uses: actions/checkout@master
        with:
          path: .github/github-actions
          repository: cg-dcx/github-actions
          ref: main
          token: ${{ secrets.ISELLPROTOKEN }}
      - name: notification sender
        uses: ./.github/github-actions/teams-notifications
        with: 
            status: "${{ github.repository }} Build & Deployment has been started by ${{ github.actor }} "
            teamsurl: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
      - name: "Checkout Code"
        uses: "actions/checkout@v2"

      - name: "Lint code"
        id: lint
        run: |
          echo "Linting repository"
      - name: "Run unit tests"
        id: unit
        run: |
          echo "Running unit tests"
      
  cd:
    name: "Deployment"
    runs-on: "ubuntu-latest"
    needs:
      - ci
    strategy:
      matrix:
        include:
          - environment: "stage"

    #if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v2"
        

      - name: Set tag
        id: vars
        run: echo "::set-output name=tag::${GITHUB_REF#refs/*/}"
        
      - name: checkout AWS ECS Deploy action
        uses: actions/checkout@master
        with:
          path: .github/github-actions
          repository: cg-dcx/github-actions
          ref: main
          token: ${{ secrets.ISELLPROTOKEN }}
        
      - name: AWS ECS CD
        id: deploy
        uses: ./.github/github-actions/Backend-cd
        with:
          ECR_REPOSITORY_NAME: ${{ env.ECR_REPOSITORY_NAME }}
          
   
  

      - name: checkout notification action
        uses: actions/checkout@master
        with:
          path: .github/github-actions
          repository: cg-dcx/github-actions
          ref: main
          token: ${{ secrets.ISELLPROTOKEN }}
      - name: notification for success status
        if:   steps.deploy.outcome  == 'success' 
        uses: ./.github/github-actions/teams-notifications
        with: 
            status: "${{ github.repository }} Deployment has completed successfully"
            teamsurl: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}

      - name: notification for failure status
        if:   steps.deploy.outcome  == 'failure' 
        uses: ./.github/github-actions/teams-notifications
        with: 
            status: "${{ github.repository }} Deployment has failed"
            teamsurl: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
